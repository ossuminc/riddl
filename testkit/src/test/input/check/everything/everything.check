Missing: everything.riddl(68:7): Function 'whenUnderTheInfluence' should have a description:
       function whenUnderTheInfluence is {
       ^
Style: everything.riddl(34:25): Field identifier 'a' is too short. The minimum length is 3:
     type PeachType is { a: Integer }
                         ^
Style: everything.riddl(69:20): Field identifier 'n' is too short. The minimum length is 3:
         requires { n: Nothing }
                    ^
Style: everything.riddl(13:20): Inlet 'Commands' overloads Outlet 'Commands' at everything.riddl(12:24):
     sink Sink is { inlet Commands is DoAThing } explained as "Data Sink"
                    ^
Missing: everything.riddl(6:3): Type 'DoAThing' should have a description:
   type DoAThing is command { thingField: Integer }
   ^
Style: everything.riddl(43:7): Field identifier 'id' is too short. The minimum length is 3:
       id is ident,
       ^
Style: everything.riddl(48:5): Type 'oneOrMore' should start with a capital letter:
     type oneOrMore is many agg
     ^
Style: everything.riddl(30:5): Type 'stamp' should start with a capital letter:
     type stamp is TimeStamp        // Define stamp as a TimeStamp
     ^
Style: everything.riddl(38:5): Type 'alt' should start with a capital letter:
     type alt is one of { enum or stamp or url }
     ^
Missing: everything.riddl(29:5): Type 'tim' should have a description:
     type tim is Time               // Define tim as a Time
     ^
Style: everything.riddl(49:5): Type 'zeroOrMore' should start with a capital letter:
     type zeroOrMore is agg*
     ^
Style: everything.riddl(35:5): Type 'enum' should start with a capital letter:
     type enum is any of { Apple Pear Peach(21) Persimmon(42) }
     ^
Style: everything.riddl(62:7): Type 'somethingDate' should start with a capital letter:
       type somethingDate is Date
       ^
Style: everything.riddl(41:5): Type 'agg' should start with a capital letter:
     type agg is {
     ^
Style: everything.riddl(28:5): Type 'dat' should start with a capital letter:
     type dat is Date               // Define dat as a Date
     ^
Style: everything.riddl(50:5): Type 'optional' should start with a capital letter:
     type optional is agg?
     ^
Missing: everything.riddl(5:3): Type 'SomeType' should have a description:
   type SomeType is String
   ^
Missing: everything.riddl(11:3): Context 'APlant' should have a description:
   context APlant is {
   ^
Style: everything.riddl(70:19): Field identifier 'b' is too short. The minimum length is 3:
         returns { b: Boolean }
                   ^
Style: everything.riddl(31:5): Type 'url' should start with a capital letter:
     type url is URL
     ^
Style: everything.riddl(27:5): Type 'ident' should start with a capital letter:
     type ident is UUID             // Define ident as an Id
     ^
Missing: everything.riddl(3:1): Domain 'Everything' should have a description:
 domain Everything is {
 ^
Missing: everything.riddl(24:5): Type 'str' should have a description:
     type str is String             // Define str as a String
     ^
Warning: everything.riddl(24:5): Type 'str' is unused:
     type str is String             // Define str as a String
     ^
Warning: everything.riddl(26:5): Type 'boo' is unused:
     type boo is Boolean            // Define boo as a Boolean
     ^
Warning: everything.riddl(28:5): Type 'dat' is unused:
     type dat is Date               // Define dat as a Date
     ^
Warning: everything.riddl(29:5): Type 'tim' is unused:
     type tim is Time               // Define tim as a Time
     ^
Warning: everything.riddl(34:5): Type 'PeachType' is unused:
     type PeachType is { a: Integer }
     ^
Warning: everything.riddl(38:5): Type 'alt' is unused:
     type alt is one of { enum or stamp or url }
     ^
Warning: everything.riddl(48:5): Type 'oneOrMore' is unused:
     type oneOrMore is many agg
     ^
Warning: everything.riddl(49:5): Type 'zeroOrMore' is unused:
     type zeroOrMore is agg*
     ^
Warning: everything.riddl(50:5): Type 'optional' is unused:
     type optional is agg?
     ^
Warning: everything.riddl(59:5): Entity 'Something' is unused:
     entity Something is {
     ^
Warning: everything.riddl(62:7): Type 'somethingDate' is unused:
       type somethingDate is Date
       ^
Warning: everything.riddl(68:7): Function 'whenUnderTheInfluence' is unused:
       function whenUnderTheInfluence is {
       ^
Missing: everything.riddl(11:3): Vital definitions should have an author reference:
   context APlant is {
   ^
Missing: everything.riddl(12:5): Vital definitions should have an author reference:
     source Source is { outlet Commands is DoAThing } described by "Data Source"
     ^
Missing: everything.riddl(13:5): Vital definitions should have an author reference:
     sink Sink is { inlet Commands is DoAThing } explained as "Data Sink"
     ^
Missing: everything.riddl(3:1): Vital definitions should have an author reference:
 domain Everything is {
 ^
Warning: everything.riddl(88:7): Inlet 'SOT_In' is not connected:
       inlet SOT_In is SomeOtherThing.ItHappened
       ^
Missing: everything.riddl(12:24): Outlet 'Commands' has nothing sent to it:
     source Source is { outlet Commands is DoAThing } described by "Data Source"
                        ^
