Error: plant.riddl(10:23): Path 'Temperature' was not resolved, in Outlet 'OutTemp', but should refer to a Type:
     outlet OutTemp is Temperature
                       ^
Error: plant.riddl(14:21): Path 'Temperature' was not resolved, in Inlet 'InTemp', but should refer to a Type:
     inlet InTemp is Temperature
                     ^
Error: plant.riddl(18:14): Path 'Forecast' was not resolved, in Pipe 'WeatherForecast', but should refer to a Type:
     transmit Forecast
              ^
Error: plant.riddl(22:14): Path 'Temperature' was not resolved, in Pipe 'TemperatureChanges', but should refer to a Type:
     transmit Temperature
              ^
Error: plant.riddl(5:27): Path 'Forecast' was not resolved, in Outlet 'WeatherSink', but should refer to a Type:
     outlet WeatherSink is Forecast
                           ^
Error: plant.riddl(9:28): Path 'Forecast' was not resolved, in Inlet 'WeatherSource', but should refer to a Type:
     inlet WeatherSource is Forecast
                            ^
Missing: plant.riddl(10:5): entity reference in Outlet 'OutTemp' should not be empty:
     outlet OutTemp is Temperature
     ^
Missing: plant.riddl(14:5): entity reference in Inlet 'InTemp' should not be empty:
     inlet InTemp is Temperature
     ^
Missing: plant.riddl(5:5): entity reference in Outlet 'WeatherSink' should not be empty:
     outlet WeatherSink is Forecast
     ^
Missing: plant.riddl(9:5): entity reference in Inlet 'WeatherSource' should not be empty:
     inlet WeatherSource is Forecast
     ^
Missing: plant.riddl(13:3): Vital definitions should have an author reference:
   sink AttenuateSensor is {
   ^
Missing: plant.riddl(1:1): Vital definitions should have an author reference:
 domain AnyDomain is {
 ^
Missing: plant.riddl(2:1): Vital definitions should have an author reference:
 plant SensorMaintenance is {
 ^
Missing: plant.riddl(4:3): Vital definitions should have an author reference:
   source GetWeatherForecast is {
   ^
Missing: plant.riddl(8:3): Vital definitions should have an author reference:
   flow GetCurrentTemperature is {
   ^
