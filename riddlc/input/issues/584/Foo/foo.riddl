context FooContext is {
  command FooStateChange {???}

  entity Foo is {
      record InitialFooData is { fi: Integer }
      record FinalFooStateData is {fs: String }
      state InitialFooState of Foo.InitialFooData
      handler InitializeFoo is {
         on command FooStateChange {
           become entity FooContext.Foo to handler Foo.FinalizeFoo
         }
      }
      state FinalFooState of Foo.FinalFooStateData
      handler FinalizeFoo is {
         on command FooStateChange {
           become entity FooContext.Foo to handler Foo.InitializeFoo
         }
      }
  } with {
      option is aggregate
  }
}
