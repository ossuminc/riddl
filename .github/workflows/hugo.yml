# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Documentation Site to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - doc/src/main/hugo/**
      - .github/workflows/hugo.yml
  pull_request:
    branches: ["main"] # PRs that merge to main
    paths:
      - doc/src/main/hugo/**
      - .github/workflows/hugo.yml


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.112.0
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt-hotspot'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.112.0'
          extended: true

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Generate ScalaDoc
        run: |
          sbt doc/test doc/unidoc

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd doc/src/main/hugo ; \
          hugo --minify --baseURL "https://riddl.tech" \
          --printMemoryUsage --noBuildLock --cleanDestinationDir \
          --enableGitInfo --noBuildLock --printPathWarnings --printMemoryUsage

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./doc/src/main/hugo/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
